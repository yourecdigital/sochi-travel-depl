import React, { useState, useEffect } from 'react';
import { Link, useLocation, useNavigate } from 'react-router-dom';
import { useAuth } from '../../contexts/AuthContext';
import { useCart } from '../../contexts/CartContext';
import CartWidget from '../CartWidget/CartWidget';
import BonusDisplay from '../BonusDisplay/BonusDisplay';
import './Header.css';

const Header: React.FC = () => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();
  const { user, logout } = useAuth();
  const { getCartCount } = useCart();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤—ã—Å–æ—Ç—ã header –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ CSS custom property
  const updateHeaderHeight = () => {
    const header = document.querySelector('.header') as HTMLElement;
    if (header) {
      const headerHeight = header.offsetHeight;
      const heroPaddingTop = headerHeight + 20; // +20px –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CSS custom property
      document.documentElement.style.setProperty('--header-height', `${headerHeight}px`);
      document.documentElement.style.setProperty('--hero-padding-top', `${heroPaddingTop}px`);
    }
  };

  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    updateHeaderHeight();
    
    const handleResize = () => {
      updateHeaderHeight();
    };
    
    window.addEventListener('resize', handleResize);
    
    return () => {
      window.removeEventListener('resize', handleResize);
    };
  }, []);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  const closeMenu = () => {
    setIsMenuOpen(false);
  };

  const isActive = (path: string) => {
    return location.pathname === path;
  };

  const handleLogout = () => {
    logout();
    closeMenu();
    navigate('/');
  };

  return (
    <header className="header">
      <div className="header-container">
        <div className="logo">
          <Link to="/" onClick={closeMenu}>
            <h1>–°–æ—á–∏–¢—É—Ä</h1>
            <span>–õ—É—á—à–∏–µ —Ç—É—Ä—ã –≤ –°–æ—á–∏</span>
          </Link>
        </div>

        <nav className={`nav ${isMenuOpen ? 'nav-open' : ''}`}>
          <ul className="nav-list">
            <li><Link to="/" className={isActive('/') ? 'active' : ''} onClick={closeMenu}>–ì–ª–∞–≤–Ω–∞—è</Link></li>
            <li><Link to="/tours" className={isActive('/tours') ? 'active' : ''} onClick={closeMenu}>–¢—É—Ä—ã</Link></li>
            <li><Link to="/hotels" className={isActive('/hotels') ? 'active' : ''} onClick={closeMenu}>–û—Ç–µ–ª–∏</Link></li>
            <li><Link to="/foreign" className={isActive('/foreign') ? 'active' : ''} onClick={closeMenu}>–ó–∞—Ä—É–±–µ–∂</Link></li>
            <li><Link to="/cruises" className={isActive('/cruises') ? 'active' : ''} onClick={closeMenu}>–ö—Ä—É–∏–∑—ã</Link></li>
            <li><Link to="/services" className={isActive('/services') ? 'active' : ''} onClick={closeMenu}>–£—Å–ª—É–≥–∏</Link></li>
            <li><Link to="/promotions" className={isActive('/promotions') ? 'active' : ''} onClick={closeMenu}>–ê–∫—Ü–∏–∏</Link></li>
            <li><Link to="/contact" className={isActive('/contact') ? 'active' : ''} onClick={closeMenu}>–ö–æ–Ω—Ç–∞–∫—Ç—ã</Link></li>
          </ul>
          
          {/* –ú–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
          <div className="mobile-auth-actions">
            {user ? (
              <>
                <BonusDisplay />
                <Link to="/cart" className="cart-button" onClick={closeMenu}>
                  üõí –ö–æ—Ä–∑–∏–Ω–∞
                  {getCartCount() > 0 && (
                    <span className="cart-count">{getCartCount()}</span>
                  )}
                </Link>
                <Link to="/profile" className="profile-button" onClick={closeMenu}>
                  üë§ {user.name}
                </Link>
                <button className="logout-button" onClick={handleLogout}>
                  –í—ã–π—Ç–∏
                </button>
              </>
            ) : (
              <>
                <Link to="/login" className="auth-button login" onClick={closeMenu}>
                  –í–æ–π—Ç–∏
                </Link>
                <Link to="/register" className="auth-button register" onClick={closeMenu}>
                  –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                </Link>
              </>
            )}
          </div>
        </nav>

        {/* –î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ */}
        <div className="header-actions">
          {user ? (
            <>
              <BonusDisplay />
              <CartWidget />
              <Link to="/profile" className="profile-button" onClick={closeMenu}>
                üë§ {user.name}
              </Link>
              <button className="logout-button" onClick={handleLogout}>
                –í—ã–π—Ç–∏
              </button>
            </>
          ) : (
            <>
              <Link to="/login" className="auth-button login" onClick={closeMenu}>
                –í–æ–π—Ç–∏
              </Link>
              <Link to="/register" className="auth-button register" onClick={closeMenu}>
                –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </Link>
            </>
          )}
        </div>

        <button className="mobile-menu-btn" onClick={toggleMenu}>
          {isMenuOpen ? '‚úï' : '‚ò∞'}
        </button>
      </div>
    </header>
  );
};

export default Header;
